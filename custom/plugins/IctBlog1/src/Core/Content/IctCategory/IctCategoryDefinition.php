<?php

namespace IctBlog1\Core\Content\IctCategory;

use IctBlog1\Core\Content\IctCategory\Aggregate\IctCategoryTranslation\IctCategoryTranslationDefinition;
use Shopware\Core\Framework\DataAbstractionLayer\EntityDefinition;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\ApiAware;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\PrimaryKey;
use Shopware\Core\Framework\DataAbstractionLayer\Field\Flag\Required;
use Shopware\Core\Framework\DataAbstractionLayer\Field\IdField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\TranslatedField;
use Shopware\Core\Framework\DataAbstractionLayer\Field\TranslationsAssociationField;
use Shopware\Core\Framework\DataAbstractionLayer\FieldCollection;

class IctCategoryDefinition extends EntityDefinition
{
    public const ENTITY_NAME = "blog_category";

    public function getEntityName(): string
    {
        // TODO: Implement getEntityName() method.
        return self::ENTITY_NAME;
    }

    public function getEntityClass(): string
    {
        return IctCategoryEntity::class; // TODO: Change the autogenerated stub
    }

    public function getCollectionClass(): string
    {
        return IctCategoryCollection::class; // TODO: Change the autogenerated stub
    }

    protected function defineFields(): FieldCollection
    {
        // TODO: Implement defineFields() method.
        return new FieldCollection([
            (new IdField('id','id'))->addFlags(new Required(), new PrimaryKey()),
            (new TranslatedField('name','name'))->addFlags((new ApiAware())),
            (new TranslationsAssociationField(
                IctCategoryTranslationDefinition::class,
                'blog_category_translation_id',
            ))->addFlags(new ApiAware(), new Required()),
        ]);
    }
}